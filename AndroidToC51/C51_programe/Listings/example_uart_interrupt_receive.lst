C51 COMPILER V9.54   EXAMPLE_UART_INTERRUPT_RECEIVE                                        04/11/2016 22:54:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE EXAMPLE_UART_INTERRUPT_RECEIVE
OBJECT MODULE PLACED IN .\Objects\example_uart_interrupt_receive.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE example_uart_interrupt_receive.c OPTIMIZE(8,SPEED) B
                    -ROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\example_uart_interrupt_receive.lst) TABS(2) OBJECT(.\Objects\example_uart_inte
                    -rrupt_receive.obj)

line level    source

   1          
   2          /*---------------------------------------------------------------------*/
   3          /* --- STC MCU Limited ------------------------------------------------*/
   4          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   5          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 -----------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   8          /* --- Web: www.STCMCU.com --------------------------------------------*/
   9          /* --- Web: www.GXWMCU.com --------------------------------------------*/
  10          /* --- QQ:  800003751 -------------------------------------------------*/
  11          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  12          /*---------------------------------------------------------------------*/
  13          
  14          /*************  功能说明    **************
  15          
  16          双串口全双工中断方式收发通讯程序。
  17          
  18          通过PC向MCU发送数据, MCU收到后通过串口把收到的数据原样返回.
  19          
  20          ******************************************/
  21          
  22          #include    "reg51.h"
  23          
  24          #define     MAIN_Fosc           11059200L   //定义主时钟
  25          
  26          
  27          typedef     unsigned char   u8;
  28          typedef     unsigned int    u16;
  29          typedef     unsigned long   u32;
  30          
  31          sfr INT_CLKO = 0x8F;
  32          sfr AUXR = 0x8E;
  33          sfr AUXR1 = 0xA2;
  34          sfr P_SW1 = 0xA2;
  35          sfr P_SW2 = 0xBA;
  36          sfr TH2  = 0xD6;
  37          sfr TL2  = 0xD7;
  38          sfr IE2   = 0xAF;
  39          
  40          sfr P4   = 0xC0;
  41          sfr P5   = 0xC8;
  42          sfr P6   = 0xE8;
  43          sfr P7   = 0xF8;
  44          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  45          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
  46          sfr P0M1 = 0x93;
  47          sfr P0M0 = 0x94;
  48          sfr P2M1 = 0x95;
  49          sfr P2M0 = 0x96;
  50          sfr P3M1 = 0xB1;
  51          sfr P3M0 = 0xB2;
  52          sfr P4M1 = 0xB3;
  53          sfr P4M0 = 0xB4;
C51 COMPILER V9.54   EXAMPLE_UART_INTERRUPT_RECEIVE                                        04/11/2016 22:54:47 PAGE 2   

  54          sfr P5M1 = 0xC9;
  55          sfr P5M0 = 0xCA;
  56          sfr P6M1 = 0xCB;
  57          sfr P6M0 = 0xCC;
  58          sfr P7M1 = 0xE1;
  59          sfr P7M0 = 0xE2;
  60          
  61          sbit P00 = P0^0;
  62          sbit P01 = P0^1;
  63          sbit P02 = P0^2;
  64          sbit P03 = P0^3;
  65          sbit P04 = P0^4;
  66          sbit P05 = P0^5;
  67          sbit P06 = P0^6;
  68          sbit P07 = P0^7;
  69          sbit P10 = P1^0;
  70          sbit P11 = P1^1;
  71          sbit P12 = P1^2;
  72          sbit P13 = P1^3;
  73          sbit P14 = P1^4;
  74          sbit P15 = P1^5;
  75          sbit P16 = P1^6;
  76          sbit P17 = P1^7;
  77          sbit P20 = P2^0;
  78          sbit P21 = P2^1;
  79          sbit P22 = P2^2;
  80          sbit P23 = P2^3;
  81          sbit P24 = P2^4;
  82          sbit P25 = P2^5;
  83          sbit P26 = P2^6;
  84          sbit P27 = P2^7;
  85          sbit P30 = P3^0;
  86          sbit P31 = P3^1;
  87          sbit P32 = P3^2;
  88          sbit P33 = P3^3;
  89          sbit P34 = P3^4;
  90          sbit P35 = P3^5;
  91          sbit P36 = P3^6;
  92          sbit P37 = P3^7;
  93          sbit P40 = P4^0;
  94          sbit P41 = P4^1;
  95          sbit P42 = P4^2;
  96          sbit P43 = P4^3;
  97          sbit P44 = P4^4;
  98          sbit P45 = P4^5;
  99          sbit P46 = P4^6;
 100          sbit P47 = P4^7;
 101          sbit P50 = P5^0;
 102          sbit P51 = P5^1;
 103          sbit P52 = P5^2;
 104          sbit P53 = P5^3;
 105          sbit P54 = P5^4;
 106          sbit P55 = P5^5;
 107          sbit P56 = P5^6;
 108          sbit P57 = P5^7;
 109          
 110          
 111          #define     Baudrate1           115200L
 112          #define     UART1_BUF_LENGTH    32
 113          
 114          
 115          u8  TX1_Cnt;    //发送计数
C51 COMPILER V9.54   EXAMPLE_UART_INTERRUPT_RECEIVE                                        04/11/2016 22:54:47 PAGE 3   

 116          u8  RX1_Cnt;    //接收计数
 117          bit B_TX1_Busy; //发送忙标志
 118          
 119          u8  idata RX1_Buffer[UART1_BUF_LENGTH]; //接收缓冲
 120          
 121          
 122          void    UART1_config(u8 brt);   // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 123          void    PrintString1(u8 *puts);
 124          
 125          
 126          //========================================================================
 127          // 函数: void main(void)
 128          // 描述: 主函数。
 129          // 参数: none.
 130          // 返回: none.
 131          // 版本: VER1.0
 132          // 日期: 2014-11-28
 133          // 备注: 
 134          //========================================================================
 135          void main(void)
 136          {
 137   1          P0M1 = 0;   P0M0 = 0;   //设置为准双向口
 138   1          P1M1 = 0;   P1M0 = 0;   //设置为准双向口
 139   1          P2M1 = 0;   P2M0 = 0;   //设置为准双向口
 140   1          P3M1 = 0;   P3M0 = 0;   //设置为准双向口
 141   1          P4M1 = 0;   P4M0 = 0;   //设置为准双向口
 142   1          P5M1 = 0;   P5M0 = 0;   //设置为准双向口
 143   1          P6M1 = 0;   P6M0 = 0;   //设置为准双向口
 144   1          P7M1 = 0;   P7M0 = 0;   //设置为准双向口
 145   1      
 146   1          UART1_config(1);    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 147   1          EA = 1; //允许总中断
 148   1      
 149   1          PrintString1("STC15F2K60S2 UART1 Test Prgramme!\r\n");  //SUART1发送一个字符串
 150   1      
 151   1          while (1)
 152   1          {
 153   2              if((TX1_Cnt != RX1_Cnt) && (!B_TX1_Busy))   //收到数据, 发送空闲
 154   2              {
 155   3                  SBUF = RX1_Buffer[TX1_Cnt];     //把收到的数据远样返回
 156   3                  B_TX1_Busy = 1;
 157   3                  if(++TX1_Cnt >= UART1_BUF_LENGTH)   TX1_Cnt = 0;
 158   3              }
 159   2          }
 160   1      }
 161          
 162          
 163          //========================================================================
 164          // 函数: void PrintString1(u8 *puts)
 165          // 描述: 串口1发送字符串函数。
 166          // 参数: puts:  字符串指针.
 167          // 返回: none.
 168          // 版本: VER1.0
 169          // 日期: 2014-11-28
 170          // 备注: 
 171          //========================================================================
 172          void PrintString1(u8 *puts) //发送一个字符串
 173          {
 174   1          for (; *puts != 0;  puts++)     //遇到停止符0结束
 175   1          {
 176   2              SBUF = *puts;
 177   2              B_TX1_Busy = 1;
C51 COMPILER V9.54   EXAMPLE_UART_INTERRUPT_RECEIVE                                        04/11/2016 22:54:47 PAGE 4   

 178   2              while(B_TX1_Busy);
 179   2          }
 180   1      }
 181          
 182          //========================================================================
 183          // 函数: SetTimer2Baudraye(u16 dat)
 184          // 描述: 设置Timer2做波特率发生器。
 185          // 参数: dat: Timer2的重装值.
 186          // 返回: none.
 187          // 版本: VER1.0
 188          // 日期: 2014-11-28
 189          // 备注: 
 190          //========================================================================
 191          void    SetTimer2Baudraye(u16 dat)  // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 192          {
 193   1          AUXR &= ~(1<<4);    //Timer stop
 194   1          AUXR &= ~(1<<3);    //Timer2 set As Timer
 195   1          AUXR |=  (1<<2);    //Timer2 set as 1T mode
 196   1          TH2 = dat / 256;
 197   1          TL2 = dat % 256;
 198   1          IE2  &= ~(1<<2);    //禁止中断
 199   1          AUXR |=  (1<<4);    //Timer run enable
 200   1      }
 201          
 202          //========================================================================
 203          // 函数: void   UART1_config(u8 brt)
 204          // 描述: UART1初始化函数。
 205          // 参数: brt: 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 206          // 返回: none.
 207          // 版本: VER1.0
 208          // 日期: 2014-11-28
 209          // 备注: 
 210          //========================================================================
 211          void    UART1_config(u8 brt)    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 212          {
 213   1          /*********** 波特率使用定时器2 *****************/
 214   1          if(brt == 2)
 215   1          {
 216   2              AUXR |= 0x01;       //S1 BRT Use Timer2;
 217   2              SetTimer2Baudraye(65536UL - (MAIN_Fosc / 4) / Baudrate1);
 218   2          }
 219   1      
 220   1          /*********** 波特率使用定时器1 *****************/
 221   1          else
 222   1          {
 223   2              TR1 = 0;
 224   2              AUXR &= ~0x01;      //S1 BRT Use Timer1;
 225   2              AUXR |=  (1<<6);    //Timer1 set as 1T mode
 226   2              TMOD &= ~(1<<6);    //Timer1 set As Timer
 227   2              TMOD &= ~0x30;      //Timer1_16bitAutoReload;
 228   2              TH1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) / 256);
 229   2              TL1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) % 256);
 230   2              ET1 = 0;    //禁止中断
 231   2              INT_CLKO &= ~0x02;  //不输出时钟
 232   2              TR1  = 1;
 233   2          }
 234   1          /*************************************************/
 235   1      
 236   1          SCON = (SCON & 0x3f) | 0x40;    //UART1模式, 0x00: 同步移位输出, 0x40: 8位数据,可变波特率, 0x80: 9位数
             -据,固定波特率, 0xc0: 9位数据,可变波特率
 237   1      //  PS  = 1;    //高优先级中断
 238   1          ES  = 1;    //允许中断
C51 COMPILER V9.54   EXAMPLE_UART_INTERRUPT_RECEIVE                                        04/11/2016 22:54:47 PAGE 5   

 239   1          REN = 1;    //允许接收
 240   1          P_SW1 &= 0x3f;
 241   1          P_SW1 |= 0x80;      //UART1 switch to, 0x00: P3.0 P3.1, 0x40: P3.6 P3.7, 0x80: P1.6 P1.7 (必须使用内部
             -时钟)
 242   1      //  PCON2 |=  (1<<4);   //内部短路RXD与TXD, 做中继, ENABLE,DISABLE
 243   1      
 244   1          B_TX1_Busy = 0;
 245   1          TX1_Cnt = 0;
 246   1          RX1_Cnt = 0;
 247   1      }
 248          
 249          
 250          //========================================================================
 251          // 函数: void UART1_int (void) interrupt UART1_VECTOR
 252          // 描述: UART1中断函数。
 253          // 参数: nine.
 254          // 返回: none.
 255          // 版本: VER1.0
 256          // 日期: 2014-11-28
 257          // 备注: 
 258          //========================================================================
 259          void UART1_int (void) interrupt 4
 260          {
 261   1          if(RI)
 262   1          {
 263   2              RI = 0;
 264   2              RX1_Buffer[RX1_Cnt] = SBUF;
 265   2              if(++RX1_Cnt >= UART1_BUF_LENGTH)   RX1_Cnt = 0;    //防溢出
 266   2          }
 267   1      
 268   1          if(TI)
 269   1          {
 270   2              TI = 0;
 271   2              B_TX1_Busy = 0;
 272   2          }
 273   1      }
 274          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =     32    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
